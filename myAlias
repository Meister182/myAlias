#===========================================================================
#                               My Alias
#===========================================================================
# Input in new line && colourful git.
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[0;35m\]$(__git_ps1 "[%s]")\[\033[00m\] \nâ””> \[\033[0;36m\]$ \[\e[0m\] '


##------ myAlias [-e] : print My Alias file. ([-e] edit)
function myAlias (){
    _myPath=$HOME'/myAlias'
    if [ "$1" == "-e" ]; then
        gedit $_myPath
        echo "sourcing.."
        source $_myPath
    else
        cat $_myPath | grep -E "^(##------)|(^(#######).*)"
    fi
}

####### Network:
##------ vcan_init [num=0] : Initializes virtual CAN port.
function vcan_init (){
    if [ -z "$1" ]; then
        _dev='vcan0'
    else
        _dev='vcan'"$1"
    fi
    
    sudo ip link add dev "$_dev" type vcan
    sudo ip link set up "$_dev"        
}

####### Git:
##------ Status [depth=5]c: Clear screen and show git Treetop, Stash and Status.
function Status () {
	clear

	# Print out current ADP and machine uptime
	ls ~/samba/views/ | grep AIVI_NIGHTLY | cut -d _ -f 3-8 | xargs -i printf "ADP: {}  | " 
	uptime

	if [ -d .git ]; then
		#--- print out tree top
		printf "================= Tree top =================\n"
		if [ -z "$1" ]; then
			git log --oneline --decorate -5
		else
			git log --oneline --decorate -$1
		fi

		#--- if anything STASHED print stash
		local _Stash=$(git stash list)
		if [ -n "$_Stash" ]; then
			printf "\n================= In Stash =================\n"
			git stash list
		fi

		#--- if anything  UNCOMMITED print status
		local _Status=$(git status --short)
		if [ -n "$_Status" ]; then
			printf "\n================== Status ==================\n"
			git status --short
		fi
		printf "\n"
	fi
}

##------ gch : git checkout
alias gc='git checkout'

##------ ga : git add
alias ga='git add'

##------ gcom : git commit -m
alias gcom='git commit -m'

##------ gPurge : Resets and cleans EVERYTHING!!
function gPurge () {
    git reset --hard;
    git clean -fdx;
}
